name: "Release"

on:
  release:
    types: [published]

jobs:
  binaries:
    name: Release Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'release'
    strategy:
      matrix:
        include:
          - arch: x86_64
            pkg: plundrio
            suffix: x86_64-linux
          - arch: aarch64
            pkg: plundrio-aarch64
            suffix: aarch64-linux
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main

      - name: Build ${{ matrix.arch }} binary
        run: nix build .#${{ matrix.pkg }}

      - name: Upload ${{ matrix.arch }} binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./result/bin/plundrio
          asset_name: plundrio_${{ github.event.release.tag_name }}.${{ matrix.suffix }}
          asset_content_type: application/octet-stream

  docker:
    name: Release Docker Images
    runs-on: ubuntu-latest
    permissions:
      packages: write
    if: github.event_name == 'release'
    needs: binaries
    strategy:
      matrix:
        include:
          - arch: x86_64
            pkg: plundrio-docker
          - arch: aarch64
            pkg: plundrio-docker-aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main

      - name: Build ${{ matrix.arch }} Docker image
        run: nix build .#${{ matrix.pkg }}

      - name: Load ${{ matrix.arch }} Docker image
        run: docker load < result

      - name: Tag ${{ matrix.arch }} Docker image
        run: |
          docker tag $(docker images -q | head -1) ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
          docker tag $(docker images -q | head -1) ghcr.io/${{ github.repository }}:latest

      - name: Docker Metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
            ghcr.io/${{ github.repository }}:latest

      - name: Push ${{ matrix.arch }} Docker image
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
